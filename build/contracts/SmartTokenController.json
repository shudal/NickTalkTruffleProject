{
  "contractName": "SmartTokenController",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disable",
          "type": "bool"
        }
      ],
      "name": "disableTokenTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_disable\",\"type\":\"bool\"}],\"name\":\"disableTokenTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"acceptTokenOwnership()\":{\"details\":\"used by a new owner to accept a token ownership transfer can only be called by the contract owner\"},\"disableTokenTransfers(bool)\":{\"details\":\"disables/enables token transfers can only be called by the contract owner\",\"params\":{\"_disable\":\"true to disable transfers, false to enable them\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"transferTokenOwnership(address)\":{\"details\":\"allows transferring the token ownership the new owner still need to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new token owner\"}},\"withdrawFromToken(address,address,uint256)\":{\"details\":\"withdraws tokens held by the controller and sends them to an account can only be called by the owner\",\"params\":{\"_amount\":\"amount to withdraw\",\"_to\":\"account to receive the new amount\",\"_token\":\"ERC20 token contract address\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account can only be called by the owner\",\"params\":{\"_amount\":\"amount to withdraw\",\"_to\":\"account to receive the new amount\",\"_token\":\"ERC20 token contract address\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/shudal/Projects/BlockChain/NickTalk/contracts/token/SmartTokenController.sol\":\"SmartTokenController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/shudal/Projects/BlockChain/NickTalk/contracts/token/SmartTokenController.sol\":{\"keccak256\":\"0x3b3d90eda332c849e6a3349173f438d7cf52ccf475625e3139f65a10ccbe2c43\",\"urls\":[\"bzzr://ec32d6e2b5a193f3b2f5930639dc8acae8b58b15e8f61f4dc03895a82b2b2c16\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xe2c787fd3eebc61309f137ed9632c2b77219171c9ab1d8aab8f444ade791c19b\",\"urls\":[\"bzzr://62a540c4cf222e642d98eeaa796b17040ba9ff2b418e995a560a599caf70f37e\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0xfa1c85dc1198ed166c5265f6af974ad6c638cb98fafaa8e9c7fcc99d65c3117a\",\"urls\":[\"bzzr://f2ff2e3c1d70b928c3afd4ad8f6c3c02cc7dd2d01af35cf3e2b75b61740bb5ad\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/Owned.sol\":{\"keccak256\":\"0xcfe877a1861adc601a5522a6e34687a0ca9d44e5b7cbad3d881a41d1a7628506\",\"urls\":[\"bzzr://024e440644d84ce83fb0dce39806c40c80f220cba69ebcb0187541b17b8a4f74\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0xcbcfcf6648e5eb893c97c4844a45637af6acfb458a688d085a48bccff02ec246\",\"urls\":[\"bzzr://df126086276df97697593d9d686740cd9447daf1d06d3dc126fc1a69acc39bc9\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/Utils.sol\":{\"keccak256\":\"0x22341406e82fe1da6b86787741db5ce76bc13275900cae1d6fe240822a9b4fd3\",\"urls\":[\"bzzr://ec4a38a6dbc574ea31f49c105cb9c528accb678b6ba165f3f1576fd2af07f6a1\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x7165266069416d0d031dbf0ba7a43c0d33c39ac804219562472939356420a441\",\"urls\":[\"bzzr://4e459502722bb6ee8da98748e70eb0dee94ec057c5c4d80f1ced7e3a5fdbc756\"]},\"/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0x8c53853fd86033399d75f6688cc2bd21c1a34115cd1f181f8259f8555ce18a6c\",\"urls\":[\"bzzr://afe302c6b69ff5092f3e927cc0bb445cdb9c4488bb42ccccd1c5641286e3a4ce\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806106ae833981016040525160008054600160a060020a0319163317905580600160a060020a038116151561004a57600080fd5b5060028054600160a060020a031916600160a060020a03929092169190911790556106348061007a6000396000f30060806040526004361061008a5763ffffffff60e060020a60003504166321e6b53d811461008f57806338a5e016146100b257806341a5b33d146100c75780635e35359e146100f157806379ba50971461011b57806385d5e631146101305780638da5cb5b1461014a578063d4ee1d901461017b578063f2fde38b14610190578063fc0c546a146101b1575b600080fd5b34801561009b57600080fd5b506100b0600160a060020a03600435166101c6565b005b3480156100be57600080fd5b506100b061025c565b3480156100d357600080fd5b506100b0600160a060020a03600435811690602435166044356102dd565b3480156100fd57600080fd5b506100b0600160a060020a0360043581169060243516604435610384565b34801561012757600080fd5b506100b061047a565b34801561013c57600080fd5b506100b06004351515610502565b34801561015657600080fd5b5061015f61057d565b60408051600160a060020a039092168252519081900360200190f35b34801561018757600080fd5b5061015f61058c565b34801561019c57600080fd5b506100b0600160a060020a036004351661059b565b3480156101bd57600080fd5b5061015f6105f9565b600054600160a060020a031633146101da57fe5b600254604080517ff2fde38b000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151919092169163f2fde38b91602480830192600092919082900301818387803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b5050505050565b600054600160a060020a0316331461027057fe5b600260009054906101000a9004600160a060020a0316600160a060020a03166379ba50976040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b50505050565b600054600160a060020a031633146102f157fe5b600254604080517f5e35359e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301526044820185905291519190921691635e35359e91606480830192600092919082900301818387803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b50505050505050565b600054600160a060020a0316331461039857fe5b82600160a060020a03811615156103ae57600080fd5b82600160a060020a03811615156103c457600080fd5b83600160a060020a0381163014156103db57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561043e57600080fd5b505af1158015610452573d6000803e3d6000fd5b505050506040513d602081101561046857600080fd5b5051151561047257fe5b505050505050565b600154600160a060020a0316331461049157600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a0316331461051657fe5b600254604080517f1608f18f00000000000000000000000000000000000000000000000000000000815283151560048201529051600160a060020a0390921691631608f18f9160248082019260009290919082900301818387803b15801561024157600080fd5b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a031633146105af57fe5b600054600160a060020a03828116911614156105ca57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a0316815600a165627a7a723058200883b8149fb89d322e0b2c0723420c103177b198a6bdfbf6af62eeaec8bb736b0029",
  "deployedBytecode": "0x60806040526004361061008a5763ffffffff60e060020a60003504166321e6b53d811461008f57806338a5e016146100b257806341a5b33d146100c75780635e35359e146100f157806379ba50971461011b57806385d5e631146101305780638da5cb5b1461014a578063d4ee1d901461017b578063f2fde38b14610190578063fc0c546a146101b1575b600080fd5b34801561009b57600080fd5b506100b0600160a060020a03600435166101c6565b005b3480156100be57600080fd5b506100b061025c565b3480156100d357600080fd5b506100b0600160a060020a03600435811690602435166044356102dd565b3480156100fd57600080fd5b506100b0600160a060020a0360043581169060243516604435610384565b34801561012757600080fd5b506100b061047a565b34801561013c57600080fd5b506100b06004351515610502565b34801561015657600080fd5b5061015f61057d565b60408051600160a060020a039092168252519081900360200190f35b34801561018757600080fd5b5061015f61058c565b34801561019c57600080fd5b506100b0600160a060020a036004351661059b565b3480156101bd57600080fd5b5061015f6105f9565b600054600160a060020a031633146101da57fe5b600254604080517ff2fde38b000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151919092169163f2fde38b91602480830192600092919082900301818387803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b5050505050565b600054600160a060020a0316331461027057fe5b600260009054906101000a9004600160a060020a0316600160a060020a03166379ba50976040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b50505050565b600054600160a060020a031633146102f157fe5b600254604080517f5e35359e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301526044820185905291519190921691635e35359e91606480830192600092919082900301818387803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b50505050505050565b600054600160a060020a0316331461039857fe5b82600160a060020a03811615156103ae57600080fd5b82600160a060020a03811615156103c457600080fd5b83600160a060020a0381163014156103db57600080fd5b85600160a060020a031663a9059cbb86866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561043e57600080fd5b505af1158015610452573d6000803e3d6000fd5b505050506040513d602081101561046857600080fd5b5051151561047257fe5b505050505050565b600154600160a060020a0316331461049157600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a0316331461051657fe5b600254604080517f1608f18f00000000000000000000000000000000000000000000000000000000815283151560048201529051600160a060020a0390921691631608f18f9160248082019260009290919082900301818387803b15801561024157600080fd5b600054600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a031633146105af57fe5b600054600160a060020a03828116911614156105ca57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a0316815600a165627a7a723058200883b8149fb89d322e0b2c0723420c103177b198a6bdfbf6af62eeaec8bb736b0029",
  "sourceMap": "945:1964:5:-;;;1084:131;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:131:5;;;;;;;;;;;;;364:5:12;:18;;-1:-1:-1;;;;;;364:18:12;372:10;364:18;;;1084:131:5;-1:-1:-1;;;;;435:22:14;;;;427:31;;;;;;-1:-1:-1;1192:5:5;:14;;-1:-1:-1;;;;;;1192:14:5;-1:-1:-1;;;;;1192:14:5;;;;;;;;;;945:1964;;;-1:-1:-1;945:1964:5;;",
  "deployedSourceMap": "945:1964:5:-;;;;;;;;;-1:-1:-1;;;945:1964:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1737:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1737:119:5;-1:-1:-1;;;;;1737:119:5;;;;;;;1996:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1996:89:5;;;;2687:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2687:220:5;-1:-1:-1;;;;;2687:220:5;;;;;;;;;;;;908:241:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;908:241:13;-1:-1:-1;;;;;908:241:13;;;;;;;;;;;;964:182:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:182:12;;;;2277:112:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2277:112:5;;;;;;;155:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:20:12;;;;;;;;-1:-1:-1;;;;;155:20:12;;;;;;;;;;;;;;181:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:23:12;;;;742:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;742:137:12;-1:-1:-1;;;;;742:137:12;;;;;996:24:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;996:24:5;;;;1737:119;487:5:12;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;1815:5:5;;:34;;;;;;-1:-1:-1;;;;;1815:34:5;;;;;;;;;:5;;;;;:23;;:34;;;;;:5;;:34;;;;;;;:5;;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;1815:34:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1815:34:5;;;;1737:119;:::o;1996:89::-;487:5:12;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;2055:5:5;;;;;;;;;-1:-1:-1;;;;;2055:5:5;-1:-1:-1;;;;;2055:21:5;;:23;;;;;-1:-1:-1;;;2055:23:5;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2055:23:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2055:23:5;;;;1996:89::o;2687:220::-;487:5:12;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;2857:5:5;;2844:56;;;;;;-1:-1:-1;;;;;2844:56:5;;;;;;;;;;;;;;;;;;;;;;2857:5;;;;;2844:34;;:56;;;;;2857:5;;2844:56;;;;;;;2857:5;;2844:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2844:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2844:56:5;;;;2687:220;;;:::o;908:241:13:-;487:5:12;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;1036:6:13;-1:-1:-1;;;;;435:22:14;;;;427:31;;;;;;1065:3:13;-1:-1:-1;;;;;435:22:14;;;;427:31;;;;;;1086:3:13;-1:-1:-1;;;;;608:25:14;;628:4;608:25;;600:34;;;;;;1112:6:13;-1:-1:-1;;;;;1112:15:13;;1128:3;1133:7;1112:29;;;;;-1:-1:-1;;;1112:29:13;;;;;;;-1:-1:-1;;;;;1112:29:13;-1:-1:-1;;;;;1112:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:29:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1112:29:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1112:29:13;1105:37;;;;;;468:1:14;;503::12;908:241:13;;;:::o;964:182:12:-;1030:8;;-1:-1:-1;;;;;1030:8:12;1016:10;:22;1008:31;;;;;;1073:8;;;1066:5;;1054:28;;-1:-1:-1;;;;;1073:8:12;;;;1066:5;;;;1054:28;;;1100:8;;;;1092:16;;-1:-1:-1;;1092:16:12;;;-1:-1:-1;;;;;1100:8:12;;1092:16;;;;1118:21;;;964:182::o;2277:112:5:-;487:5:12;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;2350:5:5;;:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;2350:5:5;;;;:22;;:32;;;;;:5;;:32;;;;;;;;:5;;:32;;;5:2:-1;;;;30:1;27;20:12;155:20:12;;;-1:-1:-1;;;;;155:20:12;;:::o;181:23::-;;;-1:-1:-1;;;;;181:23:12;;:::o;742:137::-;487:5;;-1:-1:-1;;;;;487:5:12;473:10;:19;466:27;;;;836:5;;-1:-1:-1;;;;;823:18:12;;;836:5;;823:18;;815:27;;;;;;852:8;:20;;-1:-1:-1;;852:20:12;-1:-1:-1;;;;;852:20:12;;;;;;;;;;742:137::o;996:24:5:-;;;-1:-1:-1;;;;;996:24:5;;:::o",
  "source": "pragma solidity ^0.4.21;\nimport './interfaces/ISmartToken.sol';\nimport '../utility/TokenHolder.sol';\n\n/*\n    The smart token controller is an upgradable part of the smart token that allows\n    more functionality as well as fixes for bugs/exploits.\n    Once it accepts ownership of the token, it becomes the token's sole controller\n    that can execute any of its functions.\n\n    To upgrade the controller, ownership must be transferred to a new controller, along with\n    any relevant data.\n\n    The smart token must be set on construction and cannot be changed afterwards.\n    Wrappers are provided (as opposed to a single 'execute' function) for each of the token's functions, for easier access.\n\n    Note that the controller can transfer token ownership to a new controller that\n    doesn't allow executing any function on the token, for a trustless solution.\n    Doing that will also remove the owner's ability to upgrade the controller.\n*/\ncontract SmartTokenController is TokenHolder {\n    ISmartToken public token;   // smart token\n\n    /**\n        @dev constructor\n    */\n    function SmartTokenController(ISmartToken _token)\n        public\n        validAddress(_token)\n    {\n        token = _token;\n\n\n    }\n\n    // ensures that the controller is the token's owner\n    modifier active() {\n        assert(token.owner() == address(this));\n        _;\n    }\n\n    // ensures that the controller is not the token's owner\n    modifier inactive() {\n        assert(token.owner() != address(this));\n        _;\n    }\n\n    /**\n        @dev allows transferring the token ownership\n        the new owner still need to accept the transfer\n        can only be called by the contract owner\n\n        @param _newOwner    new token owner\n    */\n    function transferTokenOwnership(address _newOwner) public ownerOnly {\n        token.transferOwnership(_newOwner);\n    }\n\n    /**\n        @dev used by a new owner to accept a token ownership transfer\n        can only be called by the contract owner\n    */\n    function acceptTokenOwnership() public ownerOnly {\n        token.acceptOwnership();\n    }\n\n    /**\n        @dev disables/enables token transfers\n        can only be called by the contract owner\n\n        @param _disable    true to disable transfers, false to enable them\n    */\n    function disableTokenTransfers(bool _disable) public ownerOnly {\n        token.disableTransfers(_disable);\n    }\n\n    /**\n        @dev withdraws tokens held by the controller and sends them to an account\n        can only be called by the owner\n\n        @param _token   ERC20 token contract address\n        @param _to      account to receive the new amount\n        @param _amount  amount to withdraw\n    */\n    function withdrawFromToken(\n        IERC20Token _token, \n        address _to, \n        uint256 _amount\n    ) \n        public\n        ownerOnly\n    {\n        ITokenHolder(token).withdrawTokens(_token, _to, _amount);\n    }\n}\n",
  "sourcePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/token/SmartTokenController.sol",
  "ast": {
    "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/token/SmartTokenController.sol",
    "exportedSymbols": {
      "SmartTokenController": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 716,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/token/interfaces/ISmartToken.sol",
        "file": "./interfaces/ISmartToken.sol",
        "id": 717,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 957,
        "src": "25:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 718,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 1341,
        "src": "64:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 719,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1340,
              "src": "978:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$1340",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 720,
            "nodeType": "InheritanceSpecifier",
            "src": "978:11:5"
          }
        ],
        "contractDependencies": [
          1294,
          1340,
          1461,
          1660,
          1676
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          1340,
          1461,
          1294,
          1676,
          1660
        ],
        "name": "SmartTokenController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 722,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 824,
            "src": "996:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartToken_$956",
              "typeString": "contract ISmartToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 721,
              "name": "ISmartToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 956,
              "src": "996:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartToken_$956",
                "typeString": "contract ISmartToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "1182:33:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 730,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "1192:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$956",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 731,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "1200:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$956",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "src": "1192:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:14:5"
                }
              ]
            },
            "documentation": "@dev constructor",
            "id": 735,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 727,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "1170:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  }
                ],
                "id": 728,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 726,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1372,
                  "src": "1157:12:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1157:20:5"
              }
            ],
            "name": "SmartTokenController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1114:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$956",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 723,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 956,
                    "src": "1114:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:20:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:0:5"
            },
            "scope": 824,
            "src": "1084:131:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "1295:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "1312:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$956",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1651,
                            "src": "1312:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1312:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 742,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "1337:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1329:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1329:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1312:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 737,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "1305:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:38:5"
                },
                {
                  "id": 747,
                  "nodeType": "PlaceholderStatement",
                  "src": "1353:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 749,
            "name": "active",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:2:5"
            },
            "src": "1277:84:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "1447:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 752,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "1464:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$956",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1651,
                            "src": "1464:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1464:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 756,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "1489:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1481:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1464:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 751,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "1457:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:38:5"
                },
                {
                  "id": 761,
                  "nodeType": "PlaceholderStatement",
                  "src": "1505:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 763,
            "name": "inactive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:2:5"
            },
            "src": "1427:86:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "1805:51:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "1839:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "1815:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1656,
                      "src": "1815:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:34:5"
                }
              ]
            },
            "documentation": "@dev allows transferring the token ownership\nthe new owner still need to accept the transfer\ncan only be called by the contract owner\n@param _newOwner    new token owner",
            "id": 777,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 768,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 767,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "1795:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1795:9:5"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "1769:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1768:19:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:0:5"
            },
            "scope": 824,
            "src": "1737:119:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "2045:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 782,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2055:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "acceptOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1659,
                      "src": "2055:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:23:5"
                }
              ]
            },
            "documentation": "@dev used by a new owner to accept a token ownership transfer\ncan only be called by the contract owner",
            "id": 788,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 780,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 779,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2035:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2035:9:5"
              }
            ],
            "name": "acceptTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:0:5"
            },
            "scope": 824,
            "src": "1996:89:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "2340:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 798,
                        "name": "_disable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "2373:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2350:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disableTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 941,
                      "src": "2350:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:32:5"
                }
              ]
            },
            "documentation": "@dev disables/enables token transfers\ncan only be called by the contract owner\n@param _disable    true to disable transfers, false to enable them",
            "id": 802,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 792,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2330:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:9:5"
              }
            ],
            "name": "disableTokenTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "name": "_disable",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "2308:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2307:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:0:5"
            },
            "scope": 824,
            "src": "2277:112:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "2834:73:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "2879:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$904",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "2887:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "2892:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$904",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 814,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "2857:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISmartToken_$956",
                              "typeString": "contract ISmartToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISmartToken_$956",
                              "typeString": "contract ISmartToken"
                            }
                          ],
                          "id": 813,
                          "name": "ITokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1676,
                          "src": "2844:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenHolder_$1676_$",
                            "typeString": "type(contract ITokenHolder)"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenHolder_$1676",
                          "typeString": "contract ITokenHolder"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1675,
                      "src": "2844:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Token_$904_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Token,address,uint256) external"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:56:5"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the controller and sends them to an account\ncan only be called by the owner\n@param _token   ERC20 token contract address\n@param _to      account to receive the new amount\n@param _amount  amount to withdraw",
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 811,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 810,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2820:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2820:9:5"
              }
            ],
            "name": "withdrawFromToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2723:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$904",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 803,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 904,
                    "src": "2723:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$904",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2752:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2774:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2713:82:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:0:5"
            },
            "scope": 824,
            "src": "2687:220:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 825,
        "src": "945:1964:5"
      }
    ],
    "src": "0:2910:5"
  },
  "legacyAST": {
    "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/token/SmartTokenController.sol",
    "exportedSymbols": {
      "SmartTokenController": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 716,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/token/interfaces/ISmartToken.sol",
        "file": "./interfaces/ISmartToken.sol",
        "id": 717,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 957,
        "src": "25:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shudal/Projects/BlockChain/NickTalk/contracts/utility/TokenHolder.sol",
        "file": "../utility/TokenHolder.sol",
        "id": 718,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 1341,
        "src": "64:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 719,
              "name": "TokenHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1340,
              "src": "978:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenHolder_$1340",
                "typeString": "contract TokenHolder"
              }
            },
            "id": 720,
            "nodeType": "InheritanceSpecifier",
            "src": "978:11:5"
          }
        ],
        "contractDependencies": [
          1294,
          1340,
          1461,
          1660,
          1676
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          1340,
          1461,
          1294,
          1676,
          1660
        ],
        "name": "SmartTokenController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 722,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 824,
            "src": "996:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISmartToken_$956",
              "typeString": "contract ISmartToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 721,
              "name": "ISmartToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 956,
              "src": "996:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISmartToken_$956",
                "typeString": "contract ISmartToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "1182:33:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 730,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "1192:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$956",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 731,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "1200:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISmartToken_$956",
                        "typeString": "contract ISmartToken"
                      }
                    },
                    "src": "1192:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:14:5"
                }
              ]
            },
            "documentation": "@dev constructor",
            "id": 735,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 727,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "1170:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  }
                ],
                "id": 728,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 726,
                  "name": "validAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1372,
                  "src": "1157:12:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1157:20:5"
              }
            ],
            "name": "SmartTokenController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 724,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "1114:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$956",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 723,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 956,
                    "src": "1114:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$956",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1113:20:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:0:5"
            },
            "scope": 824,
            "src": "1084:131:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "1295:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 738,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "1312:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$956",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1651,
                            "src": "1312:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1312:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 742,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "1337:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1329:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1329:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1312:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 737,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "1305:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:38:5"
                },
                {
                  "id": 747,
                  "nodeType": "PlaceholderStatement",
                  "src": "1353:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 749,
            "name": "active",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1292:2:5"
            },
            "src": "1277:84:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "1447:66:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 752,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "1464:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISmartToken_$956",
                                "typeString": "contract ISmartToken"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1651,
                            "src": "1464:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1464:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 756,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "1489:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartTokenController_$824",
                                "typeString": "contract SmartTokenController"
                              }
                            ],
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1481:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1464:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 751,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1690,
                      "src": "1457:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:38:5"
                },
                {
                  "id": 761,
                  "nodeType": "PlaceholderStatement",
                  "src": "1505:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 763,
            "name": "inactive",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:2:5"
            },
            "src": "1427:86:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "1805:51:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "1839:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "1815:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1656,
                      "src": "1815:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:34:5"
                }
              ]
            },
            "documentation": "@dev allows transferring the token ownership\nthe new owner still need to accept the transfer\ncan only be called by the contract owner\n@param _newOwner    new token owner",
            "id": 777,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 768,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 767,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "1795:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1795:9:5"
              }
            ],
            "name": "transferTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "name": "_newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "1769:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1768:19:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:0:5"
            },
            "scope": 824,
            "src": "1737:119:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "2045:40:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 782,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2055:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "acceptOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1659,
                      "src": "2055:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:23:5"
                }
              ]
            },
            "documentation": "@dev used by a new owner to accept a token ownership transfer\ncan only be called by the contract owner",
            "id": 788,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 780,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 779,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2035:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2035:9:5"
              }
            ],
            "name": "acceptTokenOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2025:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2045:0:5"
            },
            "scope": 824,
            "src": "1996:89:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "2340:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 798,
                        "name": "_disable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "2373:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "2350:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISmartToken_$956",
                          "typeString": "contract ISmartToken"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "disableTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 941,
                      "src": "2350:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:32:5"
                }
              ]
            },
            "documentation": "@dev disables/enables token transfers\ncan only be called by the contract owner\n@param _disable    true to disable transfers, false to enable them",
            "id": 802,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 792,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2330:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:9:5"
              }
            ],
            "name": "disableTokenTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "name": "_disable",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "2308:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2307:15:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:0:5"
            },
            "scope": 824,
            "src": "2277:112:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "2834:73:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "2879:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$904",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "2887:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "2892:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Token_$904",
                          "typeString": "contract IERC20Token"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 814,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "2857:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISmartToken_$956",
                              "typeString": "contract ISmartToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISmartToken_$956",
                              "typeString": "contract ISmartToken"
                            }
                          ],
                          "id": 813,
                          "name": "ITokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1676,
                          "src": "2844:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenHolder_$1676_$",
                            "typeString": "type(contract ITokenHolder)"
                          }
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenHolder_$1676",
                          "typeString": "contract ITokenHolder"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1675,
                      "src": "2844:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Token_$904_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Token,address,uint256) external"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:56:5"
                }
              ]
            },
            "documentation": "@dev withdraws tokens held by the controller and sends them to an account\ncan only be called by the owner\n@param _token   ERC20 token contract address\n@param _to      account to receive the new amount\n@param _amount  amount to withdraw",
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 811,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 810,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1249,
                  "src": "2820:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2820:9:5"
              }
            ],
            "name": "withdrawFromToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2723:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Token_$904",
                    "typeString": "contract IERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 803,
                    "name": "IERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 904,
                    "src": "2723:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Token_$904",
                      "typeString": "contract IERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2752:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2752:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "2774:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2713:82:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2834:0:5"
            },
            "scope": 824,
            "src": "2687:220:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 825,
        "src": "945:1964:5"
      }
    ],
    "src": "0:2910:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-06T02:37:43.867Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer"
      },
      "acceptTokenOwnership()": {
        "details": "used by a new owner to accept a token ownership transfer can only be called by the contract owner"
      },
      "disableTokenTransfers(bool)": {
        "details": "disables/enables token transfers can only be called by the contract owner",
        "params": {
          "_disable": "true to disable transfers, false to enable them"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
        "params": {
          "_newOwner": "new contract owner"
        }
      },
      "transferTokenOwnership(address)": {
        "details": "allows transferring the token ownership the new owner still need to accept the transfer can only be called by the contract owner",
        "params": {
          "_newOwner": "new token owner"
        }
      },
      "withdrawFromToken(address,address,uint256)": {
        "details": "withdraws tokens held by the controller and sends them to an account can only be called by the owner",
        "params": {
          "_amount": "amount to withdraw",
          "_to": "account to receive the new amount",
          "_token": "ERC20 token contract address"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account can only be called by the owner",
        "params": {
          "_amount": "amount to withdraw",
          "_to": "account to receive the new amount",
          "_token": "ERC20 token contract address"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}